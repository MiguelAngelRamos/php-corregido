DB_HOST=localhost
DB_USER=root
DB_PASS=academyjava
DB_NAME=Script
Para utilizar un archivo `.env` para almacenar las variables de entorno en tu proyecto PHP, puedes seguir estos pasos. Este método también te permitirá mantener tus credenciales y configuraciones sensibles fuera del código fuente, lo cual es una buena práctica de seguridad.

### 1. Crear el archivo `.env`
Crea un archivo llamado `.env` en la raíz de tu proyecto y define las variables de la siguiente manera:

```env
DB_HOST=localhost
DB_USER=root
DB_PASS=academyjava
DB_NAME=Script
```

### 2. Instalar la librería `vlucas/phpdotenv`
Utiliza Composer para instalar la librería `phpdotenv` de Vance Lucas, que te permitirá cargar fácilmente las variables de tu archivo `.env` en `$_ENV` en PHP. Si aún no tienes Composer instalado, debes [instalarlo primero](https://getcomposer.org/download/).

Una vez que Composer esté instalado, puedes añadir `phpdotenv` a tu proyecto ejecutando el siguiente comando en la terminal, en el directorio de tu proyecto:

```sh
composer require vlucas/phpdotenv
```

### 3. Cargar las variables en tu script PHP
Asegúrate de requerir el autoloader de Composer y utilizar `phpdotenv` para cargar las variables de tu `.env` al inicio de tu script PHP (`conexion.php`).

```php
<?php

require_once __DIR__ . '/vendor/autoload.php'; // Asegúrate de apuntar al autoloader correcto si tu archivo está en un subdirectorio.

$dotenv = Dotenv\Dotenv::createImmutable(__DIR__);
$dotenv->load();

$localhost = $_ENV['DB_HOST'];
$user = $_ENV['DB_USER'];
$password = $_ENV['DB_PASS'];
$bd = $_ENV['DB_NAME'];

// Resto del código...
```

**Nota:** Asegúrate de que tu archivo `.env` está incluido en tu `.gitignore` (o equivalente para otros sistemas de control de versiones) para que no se incluya en tu repositorio de código. Las credenciales y otras configuraciones sensibles nunca deben ser compartidas o publicadas.

Con estos pasos, habrás creado un sistema básico para manejar las variables de entorno en tu proyecto PHP. Este es un método ampliamente utilizado y seguro para manejar las configuraciones sensibles en proyectos de desarrollo modernos.